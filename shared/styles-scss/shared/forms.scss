@use "sass:math";

@use "chroma.scss";
@use "metrics.scss";
@use "font-cfg.scss";

@mixin form-common() {
	& {
		@include font-cfg.fc-sans();
	}
	display: block;
	font-size: 100%;
	font-stretch: expanded;

	background: none;
	color: chroma.$light2;

	box-sizing: border-box;
	width: 100%;
	height: 2.25em;
	padding: 0 0.25em;
	border: 1px solid chroma.$control-border;
	transition:
		border-color 0.25s,
		background-color 0.25s;
	border-radius: 0;
}

div.form-placeholder,
input[type="button"],
input[type="text"],
select,
textarea,
.thumb-check-box {
	@include form-common();
}

input[type="text"] {
	caret-color: control-mark;
	border-top-color: transparent;
	border-left-color: transparent;
	border-right-color: transparent;

	&:hover {
		border-bottom-color: chroma.$light1;
	}

	&:focus {
		outline: none;
		border-bottom-color: chroma.$control-border-focus;
	}
}

@mixin select-arrow-bg($line-color, $arrow-color) {
	background-image:
		linear-gradient(45deg, transparent 50%, $arrow-color 50%),
		linear-gradient(135deg, $arrow-color 50%, transparent 50%),
		linear-gradient(to right, $line-color, $line-color);
	background-position:
		calc(100% - 0.625em - 5px) calc(1em - 2px),
		calc(100% - 0.625em) calc(1em - 2px),
		calc(100% - 1.875em) calc(1px + 0.25em);
	background-size:
		5px 5px,
		5px 5px,
		1px 1.5em;
	background-repeat: no-repeat;
}

select {
	appearance: none;
	padding-right: 2.25em;

	@include select-arrow-bg(chroma.$control-border, chroma.$light1);

	&:hover {
		border-color: chroma.$control-border-hover;
		@include select-arrow-bg(chroma.$control-border, chroma.$light1);
	}

	&:focus {
		outline: none;
		border-color: chroma.$control-border-focus;
	}

	option {
		background: chroma.$dark2;
		line-height: 1.5;
	}
}

input[type="button"] {
	&:hover {
		border-color: chroma.$control-border-hover;
	}

	&:focus {
		outline: none;
		border-color: chroma.$control-border-focus;
	}
}

label.file-upload {
	@include form-common();
	cursor: pointer;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
	> input {
		display: none;
	}
}

div.form-placeholder {
	border-color: transparent;
}

@mixin check-toggle-group-common() {
	font-weight: 400;
	font-size: 1em;
	position: relative;
	display: block;
	cursor: pointer;
	padding: 0;

	&.disabled {
		opacity: 25%;
	}

	> input[type="checkbox"] {
		position: absolute;
		opacity: 0;
		cursor: pointer;
		height: 0;
		width: 0;
	}

	> input[type="checkbox"] ~ .check-mark {
		position: relative;
		display: inline-block;
		height: 2ch;
		width: 2ch;
		margin-right: 1ch;
		top: +0.2em;
		border: 1px solid chroma.$control-border;
		transition: border-color 0.5s;
	}

	&:hover > input[type="checkbox"] ~ .check-mark {
		border-color: chroma.$light1;
	}

	& > input[type="checkbox"]:focus ~ .check-mark {
		border-color: chroma.$control-border-focus;
	}

	& > input[type="checkbox"]:checked ~ .check-mark:after {
		visibility: visible;
	}
}

label.check-group {
	@include check-toggle-group-common();

	> input[type="checkbox"] ~ .check-mark {
		&:after {
			display: block;
			position: absolute;
			content: " ";
			border: solid chroma.$control-mark;
			border-width: 0 1px 1px 0;
			width: 0.75ch;
			height: 1.25ch;
			transform: rotate(45deg);
			top: 0.125ch;
			left: 0.625ch;
			visibility: hidden;
		}
	}

	> a {
		color: chroma.$light2;
		@include chroma.thin-underline(1.1em, chroma.$light1, chroma.$accent1);
	}
}

label.toggle-group {
	@include check-toggle-group-common();

	> input[type="checkbox"] ~ .check-mark {
		width: 4ch;
		border-radius: 2ch;

		&:after {
			display: block;
			position: absolute;
			content: " ";
			border: 1px solid chroma.$control-border;
			width: 0.75ch;
			height: 0.75ch;
			border-radius: 100%;
			margin: -1px 0;
			top: math.div(2ch - 0.75ch, 2);
			left: calc(-1px + (2ch - 0.75ch) / 2);
			transition:
				left 0.2s,
				border-color 0.2s;
		}
	}

	& > input[type="checkbox"]:checked ~ .check-mark:after {
		border-color: chroma.$control-mark;
		visibility: visible;
		left: calc(2ch + (2ch - 0.75ch) / 2 - 1px);
	}
}

.thumb-check-box {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	position: relative;
	outline: none;

	> .label {
		flex: none;
		display: block;
		line-height: 1;
	}

	box-sizing: border-box;
	cursor: pointer;
	border: 1px solid transparent;
	user-select: none;
	transition:
		background-color 0.25s,
		border-color 0.25s;

	&.interactive:hover {
		@include chroma.control-hover();
	}

	&.non-interactive {
		cursor: not-allowed;
	}

	&:before {
		display: block;
		content: "";
		border-top: 1px solid transparent;
		border-right: 1px solid transparent;
		border-bottom: 1px solid chroma.$control-mark;
		border-left: 1px solid chroma.$control-mark;
		position: absolute;
		height: 0.375em;
		width: 0.75em;
		bottom: 0em;
		right: -0.125em;
		transform: rotate(-45deg);
		opacity: 0;
		transition: opacity 0.25s;
	}

	&.checked {
		border-color: chroma.$control-border;

		&:before {
			opacity: 1;
		}
	}

	&.unchecked {
		opacity: 0.5;
	}
	&:focus,
	&.checked:focus {
		border-color: chroma.$control-border-focus;
	}
}
